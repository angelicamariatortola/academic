[["conceitos-básicos.html", "Capítulo 1 Conceitos Básicos 1.1 Sobre o R e RStudio 1.2 Instalação do R e do RStudio 1.3 Estrutura do RStudio 1.4 Operações Básicas em R", " Capítulo 1 Conceitos Básicos 1.1 Sobre o R e RStudio O R é uma linguagem de programação para análises estatísticas de dados É de código aberto, sendo gratuito e de livre distribuição; Amplamente utilizado por pesquisadores, professores e estudantes Disponível para diferentes sistemas operacionais; Conta com inumeros pacotes que disponibilizam funções e dados estatisticos Junto ao R, o RStudio é utilizado como ambiente de desenvolvimento integrado Algumas aplicações de R: Construção de Livros: Livro: R Cookbook Livro: Mastering Shiny Galeria do Bookdown Sites/páginas pessoais: Minha Página Pessoal Galeria do Blogdown Aplicativos dinâmicos: Aplicativos LEG (UFPR) Projeto de Extensão: EducaShiny Galeria do Shiny Referências/Fontes de ajuda Livros R Cookbook R for Data Science The Book of R: A First Course in Programming and Statistics Hands-On Programming with R: Write Your Own Functions and Simulations Learning R: A Step-by-Step Function Guide to Data Analysis Materiais em português Estatística Computacional com R (LEG/UFPR) Ciência de Dados em R Introdução ao Software R Introdução ao R Introdução ao R: Curso Básico de Linguagem R Introdução ao R (Vinícius A., Tania M. e Davi W.) Páginas de ajuda StackOverflow R-bloggers 1.2 Instalação do R e do RStudio Disponivel para Windows, macOS e Linux a instalação do R é simples basta seguir o passo-a-passo: Visitar o site do R: https://cran.r-project.org/ Clicar no link referente ao sistema operacional correspondente Fazer a instalação de acordo com as instruções Após a instalação do R seguir o passo-a-passo para a instalação do Rstudio: Visitar a página do RStudio Fazer o download do arquivo referente ao sistema operacional correspondente Fazer a instalação de acordo com as instruções 1.3 Estrutura do RStudio O Rstudio é dividido em quatro janelas principais: 1. Console (Janela Inferior Esquerda): Permite executar comandos R diretamente. Exibe resultados e mensagens (saídas de funções, erros, avisos). Dicas: Para rodar um código, digite e pressione Enter. Use as setas ↑ e ↓ para acessar comandos anteriores. O atalho Ctrl + L (Windows/Linux) ou Cmd + L (Mac) limpa o console. Exemplo Digite os códigos abaixo no Console. Use as setas ↑ e ↓ para acessar comandos anteriores. Limpe o console. x &lt;- 3 # pressione Enter y &lt;- 2 # pressione Enter print(x) # pressione Enter print(y) # pressione Enter 2. Editor de Scripts (Janela Superior Esquerda): Editor de arquivos R (.R), RMarkdown (.Rmd), Shiny Apps, entre outros. Permite escrever e salvar códigos para execução posterior. Dicas: Ctrl + Enter → Executa a linha atual. Ctrl + Shift + Enter ou Ctrl + A e Ctrl + Enter → Executa o script inteiro. Ctrl + S → Salva o arquivo. Para criar um novo script: File → New File → R Script. Exemplo Digite os códigos abaixo no Editor de Scripts. Utilize Ctrl + Enter para compilar cada linha separadamente. Utilize Ctrl + Shift + Enter (ou Ctrl + A e Ctrl + Enter) para compilar todo o script. Salve o arquivo em algum repositório. a &lt;- -1 b &lt;- 5 a b 3. Ambiente e Histórico (Janela Superior Direita): Environment: Mostra objetos carregados na sessão (data frames, variáveis, funções). History: Lista de comandos executados no console. Connections: Permite conectar-se a bancos de dados. Dicas: Use ls() no console para listar os objetos carregados. Para limpar o ambiente: rm(list = ls()) Exemplo Consulte as abas Ambiente e Histórico. Visualize as variáveis criadas e funções utilizadas. Utilize rm(list = ls()) para limpar o ambiente. 4. Janela de Arquivos, Plots, Pacotes e Ajuda (Janela Inferior Direita): Files: Gerenciador de arquivos do diretório de trabalho. Plots: Exibe gráficos gerados pelo R. Packages: Lista pacotes instalados e permite carregar ou instalar novos. Help: Ajuda e documentação de funções do R. Viewer: Exibe documentos HTML, visualizações interativas (como Shiny). Presentation: Permite criar apresentações de slides (RMarkdown). Dicas: Instalar um pacote: install.packages(\"nome_do_pacote\") ou clicar no botão Install na aba Packages. Carregar um pacote: library(\"nome_do_pacote\") ou “marcar” o pacote na aba Packages. Visualizar ajuda de uma função (ou pacote): ?nome_da_função ou help(nome_da_função). Listar pacotes carregados: search() Exemplo Copie e cole o código plot(1:10). Visualize o resultado na aba Plots. Exporte o gráfico. Instale e carregue o pacote ggplot2. Encontre a documentação do pacote no cran do R. Consulte na aba help a documentação da função mean(). Qual argumento permite ignorar valores NA nos cálculos de média? 1.3 Exercícios da Sessão 1. No Console, execute os seguintes comandos e observe os resultados: x &lt;- 10 y &lt;- 5 soma &lt;- x + y soma Qual foi o valor impresso no console? Use o comando ls() no console, o que ele faz? 2. No Editor de Scripts, crie um novo arquivo R: File → New File → R Script. Copie e cole o seguinte código no script: # Criando um vetor numeros &lt;- c(1, 2, 3, 4, 5) # Calculando a média media &lt;- mean(numeros) # Mostrando o resultado print(media) Salve o script como meuscript.R Execute o script inteiro usando Ctrl + A e Ctrl + Enter. O que foi impresso no console? 3. No Editor de Scripts cole este código e execute: x &lt;- seq(-10, 10, 0.1) y &lt;- sin(x) plot(x, y, type = &quot;l&quot;, col = &quot;blue&quot;, main = &quot;Gráfico de Seno&quot;) Vá até a aba Plots e veja o gráfico gerado. Clique em Export para salvar o gráfico. 4. Na aba Packages, instale e carregue o pacote de manipulação de dados dplyr. Encontre a documentação do pacote no Cran do R. 5. No Console do RStudio, consulte a documentação das seguintes funções: ?mean ?sd ?sum ?seq ?sample Descreva resumidamente o que faz cada função. Anote os principais argumentos de cada função. 1.4 Operações Básicas em R 1.4.1 Operações Aritméticas R funciona como uma calculadora, permitindo operações básicas com números e variáveis. Exemplo # Soma 2 + 3 # Subtração 10 - 4 # Multiplicação 5 * 2 # Divisão 9 / 3 # Exponenciação 2^3 # Raiz quadrada sqrt(16) # Resto da divisão 10 %% 3 # Parte inteira da divisão 10 %/% 3 Ordem de Prioridade dos Operadores Aritméticos Parênteses () – maior prioridade Exponenciação ^ Multiplicação e Divisão *, / Soma e Subtração +, - Exemplo 2 + 3 * 4 (2 + 3) * 4 2 * 5 ^ 2 (2 * 5) ^ 2 5 * 3 / 2 5 + 3 - 2 1.4.2 Criando Variáveis (objetos) Para criar uma variável ou objeto, usamos o simbolo de atribuição &lt;- ## Atribuindo um número a um objeto: x &lt;- 5; y &lt;- 3 Operações entre objetos numéricos: x+y # soma x-y # subtração x*y # produto x/y # quociente Restrições nos nomes das variáveis (objetos) 1. Começo do Nome: Não pode começar com número ou caracteres especiais. Deve começar com uma letra (A-Z ou a-z). nome_valido &lt;- 5 # Correto 1nome_invalido &lt;- 15 # Erro: nome não pode começar com número @nome_invalido &lt;- 15 # Erro: nome não pode começar com caracteres especiais 2. Espaços e Caracteres: O nome não deve conter espaços nem caracteres especiais como @, #, -, $, etc. O underline (_) é um caractere permitido no meio do nome. variavel_valida_1 &lt;- 20 # Correto variavel#invalida &lt;- 40 # Erro: caractere inválido (#) variavel@invalida &lt;- 40 # Erro: caractere inválido (@) 3. Diferenciação de Maiúsculas e Minúsculas: O R diferencia maiúsculas de minúsculas. Assim, var, Var e VAR são considerados nomes diferentes. var &lt;- 100 Var &lt;- 200 print(var) # 100 print(Var) # 200 4. Palavras Reservadas: Não é permitido usar palavras reservadas do R (como if, else, for, TRUE, FALSE, etc.). Essas palavras têm significados específicos e não podem ser sobrescritas. for &lt;- 10 # Erro: &#39;for&#39; é uma palavra reservada if &lt;- 20 # Erro: &#39;if&#39; é uma palavra reservada 5. Pontos e Nomes de funções preexistentes: Não é recomendado utilizar pontos. Também evitar usar nomes que conflitem com funções preexistentes do R. ## Evitar nome.com.ponto &lt;- 100 # Correto, mas pode ser confuso mean &lt;- 2 mean(mean) Dicas para os nomes das variáveis (objetos) A convenção em R é usar underline (_) para nomes de objetos (exceto no inicio). Evitar nomes ambíguos e usar nomes descritivos que deixem claro o que o objeto representa. ## Exemplos de Nomes Válidos x_1 &lt;- 5 minha_variavel &lt;- 10 temperatura_curitiba &lt;- 20 altura_estudantes &lt;- 160 Exercícios 1. Realize as seguintes operações no R: Soma de 45 e 23. Subtração de 78 por 35. Multiplicação de 12 e 9. Divisão de 100 por 4. Calcule 5 elevado à potência 3. Calcule a raiz quadrada de 64. 2. Atribua os valores 10 e 5 a duas variáveis chamadas a e b, respectivamente. Em seguida, calcule: A soma de a e b. O produto de a e b. A diferença entre a e b. O quociente de a dividido por b. 3. Algumas regras devem ser seguidas ao nomear variáveis em R. Analise os seguintes nomes e indique quais são válidos e quais causarão erro. Justifique a sua resposta. 1numero &lt;- 100 meu_numero &lt;- 25 data &lt;- &quot;2025-03-15&quot; for &lt;- &quot;teste&quot; x@y &lt;- 50 x_y &lt;- 5 Respostas 3. 1numero &lt;- 100 # Inválido: não pode começar com número meu_numero &lt;- 25 # Válido data &lt;- &quot;2025-03-15&quot; # Válido, mas desaconselhado (conflito com função data()) for &lt;- &quot;teste&quot; # Inválido: &quot;for&quot; é palavra reservada x@y &lt;- 50 # Inválido: caractere inválido (@) x_y &lt;- 5 # Válido Acesso Professor 1.4.3 Operações Lógicas e Comparações Os operadores lógicos em R são usados para avaliar expressões booleanas (VERDADEIRO ou FALSO) e criar condições. Eles operam em vetores, valores lógicos (TRUE, FALSE) e numéricos e são muito usados em estruturas condicionais e filtros de dados. 1. Operadores de Comparação Estes operadores retornam TRUE ou FALSE, dependendo do resultado da comparação. Operador Descrição Exemplo Resultado == Igualdade 10 == 10 TRUE != Diferente 10 != 5 TRUE &gt; Maior que 10 &gt; 5 TRUE &lt; Menor que 10 &lt; 5 FALSE &gt;= Maior ou igual 10 &gt;= 10 TRUE &lt;= Menor ou igual 10 &lt;= 5 FALSE Obs.: Para consultar o help destas funções usar ?Comparison ou help(\"operador\"), para algum operador específico. 2. Operadores Lógicos Operador Descrição Exemplo Resultado ! Negação lógica !TRUE FALSE &amp; E lógico (TRUE &amp; FALSE) FALSE | OU lógico (TRUE | FALSE) TRUE &amp;&amp; E lógico (TRUE &amp;&amp; FALSE) FALSE || OU lógico (TRUE || FALSE) TRUE Obs.: Para consultar o help destas funções usar ?Logic ou help(\"operador\"), para algum operador específico. Diferença entre &amp; e &amp;&amp;, | e || As formas mais curtas (&amp; e |) realizam comparações elemento a elemento. As formas mais longas (&amp;&amp; e ||) avaliam da esquerda para a direita, prosseguindo apenas até que o resultado seja determinado (em geral, mais eficiente computacionalmente). Exemplos ## Operadores de Comparação 5 &gt; 3 5 != 3 ## Operadores Lógicos TRUE &amp; TRUE # ambos são verdadeiros? Sim -&gt; TRUE, Não -&gt; FALSE TRUE | FALSE # pelo menos um deles é verdadeiro? Sim -&gt; TRUE, Não -&gt; FALSE ## Operadores de Comparação e Lógicos (5&gt;3) &amp; (4&gt;6) # FALSE (2&lt;3) | (4&lt;6) # TRUE Exercícios 1. Considere os seguintes números: a &lt;- 7, b &lt;- 3. No R, verifique as condições: Se a é maior que b Se a é divisível por 2 Se a é maior que b E (lógico) se a é divisível por 2, usando o operador lógico &amp;&amp; 2. Identifique, primeiramente sem o uso do R, o que retornará as relações a seguir (TRUE ou FALSE). Na sequência, confira os resultados usando o R. 10 &gt; 5 5 == 5 5 != 3 (3 + 2) &gt;= 5 10 / 2 &lt; 6 (4 &gt; 2) &amp; (10 &lt;= 20) (7 &lt; 3) | (8 == 8) !TRUE !(5 &gt; 3) Respostas 1. a &lt;- 7 b &lt;- 3 - a&gt;b - (a%%2==0) - a&gt;b &amp;&amp; (a%%2==0) 2. 10 &gt; 5 ## [1] TRUE 5 == 5 ## [1] TRUE 5 != 3 ## [1] TRUE (3 + 2) &gt;= 5 ## [1] TRUE 10 / 2 &lt; 6 ## [1] TRUE (4 &gt; 2) &amp; (10 &lt;= 20) ## [1] TRUE (7 &lt; 3) | (8 == 8) ## [1] TRUE !TRUE ## [1] FALSE !(5 &gt; 3) ## [1] FALSE Acesso Professor 1.4 Exercícios da Sessão 1. Resolva as expressões abaixo (primeiramente sem o R) e explique o resultado com base na ordem de prioridade dos operadores. Na sequência, confira os resultados usando o R. # a) resultado1 &lt;- 5 + 3 * 2 # b) resultado2 &lt;- (5 + 3) * 2 # c) resultado3 &lt;- 10 / 2 + 3 # d) resultado4 &lt;- 10 / (2 + 3) # e) resultado5 &lt;- 4^2 / 2 2. Dados os valores: x &lt;- 15; y &lt;- 10; z &lt;- 20 Quais das relações a seguir serão TRUE e quais serão FALSE: # a) x &gt; y &amp; y &lt; z # b) x == 15 | y &gt; z # c) !(x &lt; z) # d) (x &gt;= y) &amp; (y != 10) # e) (x &lt; y) | (z &gt; x) Respostas 1. # a) (resultado1 &lt;- 5 + 3 * 2) ## [1] 11 # b) (resultado2 &lt;- (5 + 3) * 2) ## [1] 16 # c) (resultado3 &lt;- 10 / 2 + 3) ## [1] 8 # d) (resultado4 &lt;- 10 / (2 + 3)) ## [1] 2 # e) (resultado5 &lt;- 4^2 / 2) ## [1] 8 2. x &lt;- 15 y &lt;- 10 z &lt;- 20 # a) x &gt; y &amp; y &lt; z ## [1] TRUE # b) x == 15 | y &gt; z ## [1] TRUE # c) !(x &lt; z) ## [1] FALSE # d) (x &gt;= y) &amp; (y != 10) ## [1] FALSE # e) (x &lt; y) | (z &gt; x) ## [1] TRUE Acesso Professor "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
