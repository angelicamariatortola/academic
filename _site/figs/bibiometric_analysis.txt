
## Bibliometric Analysis

rm(list = ls())
library(bibliometrix)   ### load bibliometrix package
library(reshape2)
library(ggsci)
library(tidyverse)
library(plyr)
library(ggthemes)
library(cowplot)
library(RColorBrewer)
library(maptools)
library(ggplot2)
library(rworldmap)
library(stringr)

## Reading data files

data_web <- convert2df("./web_data.bib", dbsource = "isi", format = "bibtex")
data_scopus <- convert2df("./scopus_data.bib", dbsource = "isi", format = "bibtex")

## Removing duplicates

mergeDbSources <- function(...,remove.duplicated=TRUE){
  
  ###
  L <- list(...)
  
  n=length(L)
  
  Tags=names(L[[1]])
  
  ## identification of common tags
  for (j in 2:n){
    Tags=intersect(Tags,names(L[[j]]))
  }
  #####
  M=data.frame(matrix(NA,1,length(Tags)))
  names(M)=Tags
  for (j in 1:n){
    L[[j]]=L[[j]][,Tags]
    
    M=rbind(M,L[[j]])
  }
  
  ## author data cleaning
  if ("AU" %in% Tags){
    M$AU=gsub(","," ",M$AU)
    AUlist=strsplit(M$AU,";")
    AU=lapply(AUlist,function(l){
      l=trim(l)
      name=strsplit(l," ")
      lastname=unlist(lapply(name,function(ln){ln[1]}))
      firstname=lapply(name,function(ln){
        f=paste(substr(ln[-1],1,1),collapse=" ")
      })
      AU=paste(lastname,unlist(firstname),sep=" ",collapse=";")
      return(AU)
    })
    M$AU=unlist(AU)
    
  }
  M=M[-1,]
  ## M$DB="ISI"
  
  if (isTRUE(remove.duplicated)){
    M$TI=gsub("[^[:alnum:] ]","",M$TI)
    M$TI=gsub("(?<=[\\s])\\s*|^\\s+|\\s+$", "", M$TI, perl=TRUE)
    d=duplicated(M$TI)
    cat("\n",sum(d),"duplicated documents have been removed\n")
    M=M[!d,]
  }
  class(M) <- c("bibliometrixDB", "data.frame")
  return(M)
}

data_merge_corr <- mergeDbSources(data_web, data_scopus,
                                  remove.duplicated = TRUE)

## Basic Plots

results <- biblioAnalysis(data_merge_corr, sep = ";")
S_map <- summary(object = results, k = 10, pause = FALSE)
pp <- plot(x = results, k = 10, pause = FALSE)


## 1 - Country Scientific Production

df <- S_map$MostProdCountries[,1:2]
df$Country <- trim(str_to_title(df$Country))
df <- data.frame(region =  df$Country, Articles = df$Articles)

map.world = map_data(map='world')
map.world$region <- trim(str_to_title(map.world$region))

map.world = merge(map.world, df, by = "region", all.x=TRUE)
map.world = map.world[order(map.world$order), ] 
map.world$Articles <- as.numeric(map.world$Articles)

gp_mapworld <-  ggplot() +
  geom_map(data = map.world, map = map.world,
           aes(map_id = region, x=long, y=lat, fill=Articles)) +
  scale_fill_gradient(low="#56B1F7", high="#132B43", breaks = seq(8, 23, by = 5)) +
  labs(title = "", x = "Longitude", y = "Latitude", fill = "Articles") +
  theme_bw() +
  theme(axis.text.x = element_text(hjust = 1, size = 10, vjust=1),
        axis.text.y = element_text(hjust = 1, size = 10, vjust=1),
        axis.title = element_text(hjust = 0.5, size = 12, vjust=0.5,
                                  margin = margin(t=0, r=0,b=0, l=0)),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        panel.border = element_blank(),
        plot.background = element_rect(fill = 'white')) +
  coord_quickmap()

gp_mapworld


## 2 - Most Productive Countries  

coutry <- pp$MostProdCountries$data$Country
value <- pp$MostProdCountries$data$Freq
Collaboration <- pp$MostProdCountries$data$Collaboration
mydata <- data.frame(coutry, value, Collaboration)

gp_MostProdCountries <- ggplot(mydata, aes(fct_rev(reorder(coutry, -value)), 
                          value, fill = Collaboration)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(title = "", x = "Countries", y = "Articles") +
  theme_bw() +
  theme(axis.text.x = element_text(hjust = 1, size = 10, vjust=1, colour = 'black'),
        axis.text.y = element_text(hjust = 1, size = 10, vjust=1, colour = 'black'),
        axis.title = element_text(hjust = 0.5, size = 12, vjust=0.5,
                                  margin = margin(t=0, r=0,b=0, l=0)),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        panel.border = element_blank(),
        plot.background = element_rect(fill = 'white')) 

gp_MostProdCountries

## Table - Most Productive Countries  
S_map$MostProdCountries

## Table - Most Relevant Sources 
S_map$MostRelSources


## 3 - Journals's growth

so1 <- sourceGrowth(data_merge_corr, top = 5, cdf = F)
laby = "Annual occurrences (loess smoothing)"

term=names(so1)[-1]
term=rep(term,each=dim(so1)[1])
n=dim(so1)[1]*(dim(so1)[2]-1)
freq=matrix(as.matrix(so1[,-1]),n,1)
data_so1=data.frame(Year=rep(so1$Year,(dim(so1)[2]-1)),Source=term, 
                    Freq=freq, stringsAsFactors = TRUE)

gp_grown = ggplot(data_so1)+
  geom_smooth(aes(x=Year,y=Freq, group=Source, color=Source),se=F, 
              method = "loess", formula="y ~ x")+
  labs(x = 'Year', y = laby, title = "") +
  #labs(x = 'Ano', y = laby, title = "") +
  #ylim(0, NA) +
  scale_x_continuous(breaks= (so1$Year[seq(1,length(so1$Year),
                                           by=ceiling(length(so1$Year)/20))])) +
  geom_hline(aes(yintercept=0, alpha=0.1))+
  theme_bw() +
  theme(text = element_text(color = "#444444"), legend.position="none"
        ,plot.caption = element_text(size = 14, hjust = 0.5, color = "black", 
                                     face = "bold")
        ,plot.title = element_text(size = 24)
        ,axis.title = element_text(size = 14, color = 'black')
        ,axis.title.y = element_text(hjust = 0.5, vjust = 0.5, angle = 90, color = 'black')
        ,axis.title.x = element_text(hjust = 0.5, vjust = 0.5, angle = 0, color = 'black')
        ,axis.text.x = element_text(size=10, color = 'black')
        ,axis.text.y = element_text(size=10, color = 'black')
        ,axis.ticks.x = element_blank()
        ,axis.ticks.y = element_blank()
        ,panel.border = element_blank()
  )

DFsmooth=(ggplot_build(gp_grown)$data[[1]])
DFsmooth$group=factor(DFsmooth$group, labels=levels(data_so1$Source))

maximum=sort(unique(DFsmooth$x),decreasing=TRUE)[2]
DF2=subset(DFsmooth, x == maximum)

gp_grown +
  ggrepel::geom_text_repel(data = DF2, aes(label = DF2$group, 
           colour = DF2$group, x =DF2$x, y = DF2$y), hjust = -.1, size = 5)

## 4 - Most Productive Authors

rm(df) ## remove df variable
df <- plyr::ldply(S_map, data.frame)
df <- subset(df, .id == "MostProdAuthors", select = c(Articles, Authors.......))
df <- df %>% dplyr::rename(Authors = Authors.......)

df$Articles <- as.numeric(df$Articles)
df$Authors <-as.factor(df$Authors)

gp_MostProdAuthors <- ggplot(df, aes(x = fct_rev(reorder(Authors, -Articles)),
                                     y = Articles, fill = Articles)) +
  scale_fill_gradient(low="#56B1F7", high="#132B43") +
  geom_bar(stat="identity", show.legend = FALSE) +
  coord_flip() +
  labs(title = "", x = "Authors") +
  theme_bw() +
  theme(axis.text.x = element_text(hjust = 1, size = 10, vjust=1, colour = 'black'),
        axis.text.y = element_text(hjust = 1, size = 10, vjust=1, colour = 'black'),
        axis.title = element_text(hjust = 0.5, size = 12, vjust=0.5,
                                  margin = margin(t=0, r=0,b=0, l=0)),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        panel.border = element_blank(),
        plot.background = element_rect(fill = 'white')) 

gp_MostProdAuthors

## 5 - Top-Authorsâ€™ Productivity over the Time 

authorProdOverTime2 <- function(M,k=10, graph=TRUE){
  
  M$TC=as.numeric(M$TC)
  M$PY=as.numeric(M$PY)
  M <- M[!is.na(M$PY),] #remove rows with missing value in PY
  AU=names(tableTag(M,"AU"))
  k=min(k,length(AU))
  AU=AU[1:k]
  df=data.frame("Author"="NA","year"=NA, "TI"="NA","SO"="NA",
                "DOI"="NA", "TC"=NA,"TCpY"=NA,stringsAsFactors = FALSE)
  Y=as.numeric(substr(Sys.time(),1,4))
  if (!("DI" %in% names(M))){M$DI="NA"}
  for (i in 1:length(AU)){
    
    ind=which(regexpr(AU[i],M$AU)>-1)
    TCpY=M$TC[ind]/(Y-M$PY[ind]+1)
    dfAU=data.frame("Author"=rep(AU[i],length(ind)),"year"=M$PY[ind],
                    "TI"=M$TI[ind],"SO"=M$SO[ind],"DOI"=M$DI[ind],
                    "TC"=M$TC[ind], "TCpY"=TCpY,stringsAsFactors = TRUE)
    df=rbind(df,dfAU)
  }
  df=df[-1,]
  df2<-dplyr::group_by(df, .data$Author,.data$year) %>%
    dplyr::summarise(freq=length(.data$year),TC=sum(.data$TC),
                     TCpY=sum(.data$TCpY))
  
  df2=as.data.frame(df2)
  df2$Author=factor(df2$Author,levels=AU[1:k])
  
  g <- ggplot(df2, aes(x=.data$Author, y=.data$year, 
                       text = paste("Author: ", .data$Author,"\nYear: ",
                                    .data$year ,"\nN. of Articles: ",.data$freq ,
                                    "\nTotal Citations per Year: ", round(.data$TCpY,2)))) +
    geom_point(aes(alpha=.data$TCpY, size =.data$freq), color="dodgerblue4")+ 
    scale_size(range=c(2,6))+
    scale_alpha(range=c(0.3,1))+
    scale_y_continuous(breaks = seq(min(df2$year),max(df2$year), by=2))+
    guides(size = guide_legend(order = 1, "Articles"),
           alpha = guide_legend(order = 2, "TC per Year"))+
    # guides(size = guide_legend(order = 1, "Artigos"), 
    #        alpha = guide_legend(order = 2, "TC por Ano"))+
    theme_bw() +
    theme(legend.position = 'right'
          ,text = element_text(color = "black", size = 10)
          ,axis.title = element_text(size = 12, color = 'black')
          
          ,axis.title.y = element_text(hjust = 0.5, vjust = 0.5, 
                                       angle = 90, color = 'black')
          ,axis.title.x = element_text(hjust = 0.5, vjust = 0.5, color = 'black')
          
          ,axis.text.x = element_text(size = 10, angle = 0, color = 'black')
          ,axis.text.y = element_text(size = 10, color = 'black')
          
          ,panel.border = element_blank()
    )+
    labs(title="", x="Authors", y="Year")+
    #labs(title="", x="Autores", y="Ano")+
    geom_line(data=df2,aes(x = .data$Author, y = .data$year,
                           group=.data$Author),
              size=1.0, color="firebrick", alpha=0.3 )+
    scale_x_discrete(limits = rev(levels(df2$Author)))+
    coord_flip()
  
  df$DOI=as.character(df$DOI)
  res <- list(dfAU=df2,dfPapersAU=df,graph=g)
  if (isTRUE(graph)){plot(g)}
  return(res)
}

top_authors <- authorProdOverTime2(data_merge_corr, k = 10, graph = TRUE)
top_authors$dfAU

## 6 - Annual Scientific Production

Year <- pp$AnnualScientProd$data$Year
Freq <- pp$AnnualScientProd$data$Freq

mydata2 <- data.frame(Year, Freq)

gp_anual <- ggplot(mydata2, aes(Year, Freq)) +
  geom_line(stat = "identity", color = "black") +
  geom_area(fill = "dodgerblue4", alpha = 0.5) +
  labs(title = "", x = "Year", y = "Articles") + 
  scale_x_continuous(n.breaks = length(mydata2$Year)/3) +
  theme_bw() +
  theme(axis.text.x = element_text(hjust = 1, size = 10, vjust=1, colour = 'black'),
        axis.text.y = element_text(hjust = 1, size = 10, vjust=1, colour = 'black'),
        axis.title = element_text(hjust = 0.5, size = 12, vjust=0.5,
                                  margin = margin(t=0, r=0,b=0, l=0)),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        panel.border = element_blank(),
        plot.background = element_rect(fill = 'white')) 

gp_anual


