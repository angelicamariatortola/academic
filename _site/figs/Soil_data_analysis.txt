
rm(list = ls())
    
## Packages

library(brazilmaps) ## get_brmap function
library(ggplot2) ## ggplot function
library(cowplot) ## plot_grid function
library(gdata) ## upperTriangle function
library(Matrix) ## bdiag function
library(GeoModels) ## GeoFit function
library(metaSEM)
library(mvnfast)

source("https://angelicamariatortola.github.io/academic/functions.txt")

##  Loading data
  
data("soil250", package = "geoR")
dados12 <- data.frame(X=soil250$Linha/10, Y=soil250$Coluna/10, 
                    var1 = soil250$H, var2 = soil250$CTC)

## Transforming
dados <- transform(dados12,
                   var1 = resid(lm(var1 ~ 1, data = dados12)),
                   var2 = resid(lm(var2 ~ 1, data = dados12)))

## Initial value parameters
s12 <- round(c(sd(dados$var1), sd(dados$var2)), 2)
s12
rho12 <- round(cor(dados$var1, dados$var2), 2)
rho12

## Distance Matrix

U <- as.matrix(dist(as.matrix(dados[, 1:2]))) ##entra-se com long e lat
U_vec <- upperTriangle(U, byrow = T)
y <- as.numeric(as.matrix(dados[3:4]))

## Estimation
## Initial values
phi_ini <- c(1,2)
nu_ini  <- c(0.3, 0.5)

ini_MatSimp <- c(phi_ini, nu_ini, s12, rho12)
ini_MatConstr <- c(s12[1]^2, s12[2]^2,phi_ini, nu_ini, rho12)
ini_MatInd <- c(s12[1]^2, s12[2]^2,phi_ini, nu_ini)
ini_lmc <- c(s12[1]^2, 0, s12[2]^2, 0,phi_ini)
ini_MatSep <- c(s12[1]^2, s12[2]^2,phi_ini[1],nu_ini[1],rho12)

## Estimating MatSimpler model
est_MatSimp <- estima_MatSimpler(ini_pars = ini_MatSimp, U_vec = U_vec, y = y,
                 logpars = F, method = "Nelder-Mead", nvar = 2, maxit = 2000)

## Estimating Constrained Matérn model
est_MatConstr <- estima_Bi_MatGneiContr(dados = dados, 
                    ini_pars = ini_MatConstr, method = "Nelder-Mead")

## Estimating Independent Matérn model 
est_MatInd <- estima_Bi_MatGneiInd(dados = dados, 
              ini_pars = ini_MatInd, method = "Nelder-Mead")

# Estimating LMC
est_lmc <- estima_Bi_LMC(dados = dados, 
            ini_pars = ini_lmc, method = "Nelder-Mead")

## Estimating Separable Matérn model
est_MatSep <- estima_Bi_MatGneiSep(dados = dados, 
                  ini_pars = ini_MatSep, method = "Nelder-Mead")


## Results

round(est_MatSimp$est_param,3)
round(est_MatConstr$est_param,3)
round(est_MatInd$est_param,3)
round(est_lmc$est_param,3)
round(est_MatSep$est_param,3)

ll_aic_bic <- data.frame(MatSimp = round(est_MatSimp$info_crite, 3)[,c("LL", "AIC", "BIC")],
                         MatConstr = round(est_MatConstr$info_crite, 3)[,c("LL", "AIC", "BIC")],
                         MatInd = round(est_MatInd$info_crite, 3)[,c("LL", "AIC", "BIC")],
                         LMC = round(est_lmc$info_crite, 3)[,c("LL", "AIC", "BIC")],
                         MatSep = round(est_MatSep$info_crite, 3)[,c("LL", "AIC", "BIC")])

time_models <- data.frame(MatSimp = round(est_MatSimp$time, 3)[1:3],
                          MatConstr = round(est_MatConstr$time, 3)[1:3],
                          MatInd = round(est_MatInd$time, 3)[1:3],
                          LMC = round(est_lmc$time, 3)[1:3],
                          MatSep = round(est_MatSep$time, 3)[1:3])

est_MatSimp$convergence
est_MatConstr$convergence
est_MatInd$convergence
est_lmc$convergence
est_MatSep$convergence

